import pygame
import config
import wfc


class Map(object):
    def __init__(self):
        states = ['cross',
                  't_up',
                  't_down',
                  't_right',
                  't_left',
                  'straight_horizontal',
                  'straight_vertical',
                  'corner_topleft',
                  'corner_topright',
                  'corner_botleft',
                  'corner_botright',
                  'deadend_left',
                  'deadend_right',
                  'deadend_up',
                  'deadend_down',
                  'blank',
                  ]

        self.states = [wfc.State(state,
                                 wfc.Rule(getattr(self, f'{state}_rule'))
                                 )
                       for state in states]

    @staticmethod
    def cross_rule(x, y):
        rules = {(x - 1, y): ['cross',
                              't_up',
                              't_down',
                              't_right',
                              'straight_horizontal',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              ],
                 (x + 1, y): ['cross',
                              't_up',
                              't_down',
                              't_left',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              ],
                 (x, y - 1): ['cross',
                              't_down',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_down',
                              ],
                 (x, y + 1): ['cross',
                              't_up',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_up',
                              ],
                 }
        return rules

    @staticmethod
    def t_up_rule(x, y):
        rules = {(x - 1, y): ['cross',
                              't_up',
                              't_down',
                              't_right',
                              'straight_horizontal',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              ],
                 (x + 1, y): ['cross',
                              't_up',
                              't_down',
                              't_left',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              ],
                 (x, y - 1): ['cross',
                              't_down',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_down',
                              ],
                 (x, y + 1): ['t_down',
                              'straight_horizontal',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_down',
                              'blank',
                              ],
                 }
        return rules

    @staticmethod
    def t_down_rule(x, y):
        rules = {(x - 1, y): ['cross',
                              't_up',
                              't_down',
                              't_right',
                              'straight_horizontal',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              ],
                 (x + 1, y): ['cross',
                              't_up',
                              't_down',
                              't_left',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              ],
                 (x, y - 1): ['t_up',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_up',
                              'blank',
                              ],
                 (x, y + 1): ['cross',
                              't_up',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_up',
                              ],
                 }
        return rules

    @staticmethod
    def t_right_rule(x, y):
        rules = {(x - 1, y): ['t_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x + 1, y): ['cross',
                              't_up',
                              't_down',
                              't_left',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              ],
                 (x, y - 1): ['cross',
                              't_down',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_down',
                              ],
                 (x, y + 1): ['cross',
                              't_up',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_up',
                              ],
                 }
        return rules

    @staticmethod
    def t_left_rule(x, y):
        rules = {(x - 1, y): ['cross',
                              't_up',
                              't_down',
                              't_right',
                              'straight_horizontal',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              ],
                 (x + 1, y): ['t_right',
                              'straight_vertical',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x, y - 1): ['cross',
                              't_down',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_down',
                              ],
                 (x, y + 1): ['cross',
                              't_up',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_up',
                              ],
                 }
        return rules

    @staticmethod
    def straight_horizontal_rule(x, y):
        rules = {(x - 1, y): ['cross',
                              't_up',
                              't_down',
                              't_right',
                              'straight_horizontal',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              ],
                 (x + 1, y): ['cross',
                              't_up',
                              't_down',
                              't_left',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              ],
                 (x, y - 1): ['t_up',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_up',
                              'blank',
                              ],
                 (x, y + 1): ['t_down',
                              'straight_horizontal',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_down',
                              'blank',
                              ],
                 }
        return rules

    @staticmethod
    def straight_vertical_rule(x, y):
        rules = {(x - 1, y): ['t_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x + 1, y): ['t_right',
                              'straight_vertical',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x, y - 1): ['cross',
                              't_down',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_down',
                              ],
                 (x, y + 1): ['cross',
                              't_up',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_up',
                              ],
                 }
        return rules

    @staticmethod
    def corner_topleft_rule(x, y):
        rules = {(x - 1, y): ['cross',
                              't_up',
                              't_down',
                              't_right',
                              'straight_horizontal',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              ],
                 (x + 1, y): ['t_right',
                              'straight_vertical',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x, y - 1): ['cross',
                              't_down',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_down',
                              ],
                 (x, y + 1): ['t_down',
                              'straight_horizontal',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_down',
                              'blank',
                              ],
                 }
        return rules

    @staticmethod
    def corner_topright_rule(x, y):
        rules = {(x - 1, y): ['t_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x + 1, y): ['cross',
                              't_up',
                              't_down',
                              't_left',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              ],
                 (x, y - 1): ['cross',
                              't_down',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_down',
                              ],
                 (x, y + 1): ['t_down',
                              'straight_horizontal',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_down',
                              'blank',
                              ],
                 }
        return rules

    @staticmethod
    def corner_botleft_rule(x, y):
        rules = {(x - 1, y): ['cross',
                              't_up',
                              't_down',
                              't_right',
                              'straight_horizontal',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              ],
                 (x + 1, y): ['t_right',
                              'straight_vertical',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x, y - 1): ['t_up',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_up',
                              'blank',
                              ],
                 (x, y + 1): ['cross',
                              't_up',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_up',
                              ],
                 }
        return rules

    @staticmethod
    def corner_botright_rule(x, y):
        rules = {(x - 1, y): ['t_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x + 1, y): ['cross',
                              't_up',
                              't_down',
                              't_left',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              ],
                 (x, y - 1): ['t_up',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_up',
                              'blank',
                              ],
                 (x, y + 1): ['cross',
                              't_up',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_up',
                              ],
                 }
        return rules

    @staticmethod
    def deadend_left_rule(x, y):
        rules = {(x - 1, y): ['cross',
                              't_up',
                              't_down',
                              't_right',
                              'straight_horizontal',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              ],
                 (x + 1, y): ['t_right',
                              'straight_vertical',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x, y - 1): ['t_up',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_up',
                              'blank',
                              ],
                 (x, y + 1): ['t_down',
                              'straight_horizontal',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_down',
                              'blank',
                              ],
                 }
        return rules

    @staticmethod
    def deadend_right_rule(x, y):
        rules = {(x - 1, y): ['t_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x + 1, y): ['cross',
                              't_up',
                              't_down',
                              't_left',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              ],
                 (x, y - 1): ['t_up',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_up',
                              'blank',
                              ],
                 (x, y + 1): ['t_down',
                              'straight_horizontal',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_down',
                              'blank',
                              ],
                 }
        return rules

    @staticmethod
    def deadend_up_rule(x, y):
        rules = {(x - 1, y): ['t_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x + 1, y): ['t_right',
                              'straight_vertical',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x, y - 1): ['cross',
                              't_down',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_down',
                              ],
                 (x, y + 1): ['t_down',
                              'straight_horizontal',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_down',
                              'blank',
                              ],
                 }
        return rules

    @staticmethod
    def deadend_down_rule(x, y):
        rules = {(x - 1, y): ['t_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x + 1, y): ['t_right',
                              'straight_vertical',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x, y - 1): ['t_up',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_up',
                              'blank',
                              ],
                 (x, y + 1): ['cross',
                              't_up',
                              't_right',
                              't_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_up',
                              ],
                 }
        return rules

    @staticmethod
    def blank_rule(x, y):
        rules = {(x - 1, y): ['t_left',
                              'straight_vertical',
                              'corner_topleft',
                              'corner_botleft',
                              'deadend_left',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x + 1, y): ['t_right',
                              'straight_vertical',
                              'corner_topright',
                              'corner_botright',
                              'deadend_right',
                              'deadend_up',
                              'deadend_down',
                              'blank',
                              ],
                 (x, y - 1): ['t_up',
                              'straight_horizontal',
                              'corner_topleft',
                              'corner_topright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_up',
                              'blank',
                              ],
                 (x, y + 1): ['t_down',
                              'straight_horizontal',
                              'corner_botleft',
                              'corner_botright',
                              'deadend_left',
                              'deadend_right',
                              'deadend_down',
                              'blank',
                              ],
                 }
        return rules

    def generate_map(self, size):
        map_wave = wfc.Wave(size, self.states)
        self.map = map_wave.collapse()
